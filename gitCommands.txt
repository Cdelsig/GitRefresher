Git Notes

ls - list all files in current directory

$ git config --global user.name "Carrie"
$ git config --global user.email "cdelsig@gmail.com"
--need these two for commits

$git init <projectFolder>
--makes folder a git repository

$git status
--tells you:
    which branch you're on
    which files have changed
    which files are not tracked
    hints on what to do next
$git status -s
-- -s is for "shorthand". SHows which files were changed, but not the changes themselves.

$git add <fileName>
--adds file to repository
$git add .
--adds all files in directory to repository
--IMPORTANT: need to add files each time after each commit

$git rm --cached <fileName>
--removes file from staging area (that's what the "cached" is for)
    file won't be tracked anymore

$git commit -m "your message"
-- -m is for message
$git commit -a -m "your message"
--commits all changes

$git log
--shows changes to repository
    when log gets too long it puts you into a cmd line editor
    to exit: hold Shift + zz
$git log --oneline
    shows messages only, not user and date

$git diff
--shows which files have changed or added/removed
$git diff --cached
--shows which files have changed or added/removed to staging area


~~ In GitHub > Settings > SSH Keys:
  need to set this up manually when using Git Bash
  RSA key is public and private key.
  Private key is on local machine
  Public key gets added to GitHub

  To upload code to GitHub:
  1. Create SSH Key
    Start > <user> , check to see that .SSH folder doesn't exist
    In GitBash, type:
      $ssh-keygen -t rsa -C "email address"
      -- -t is for the type of key
      -- -C allows us to add a comment, so we are adding in our email address
      -- then, enter a password for the key
  2. Send using HTTPS or SSH (GitHub prefers SSH)

  $ ssh -T github.com to test key

  $git remote add
  --tells git to add remote repository to GitHub
  --common to use origin as name of repo, then, go into GitHub and copy SSH key
  will end up looking like this:
  $ git remote add origin git@github.com:Cdelsig/GitRefresher.git

  $ git push origin master
  -- origin is the name of the local repository, and master is the master branch we are pushing
~~

$ git branch
--lists all branches
$ git branch <name of new branch>
--creates new branch
$ git checkout <name of branch>
--switch to branch

$ git clone <ssh link>
--gets clone from GitHub down to local machine
  need to set up SSH key if one doesn't already exist

$ git merge <branch to merge>
--need to be in the branch that is to be merged to the target branch
  ex: if in (branch1): $ git merge master
